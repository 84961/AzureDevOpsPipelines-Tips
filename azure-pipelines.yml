trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  subscription: Visual Studio Enterprise(17b12858-3960-4e6f-a663-a06fdae23428)
  resourceGroup: resourcegroup-tfstate
  storageAccount: terraformtfstateskip
  container: tfstate
  tfstateFile: terraform.tfstate

steps:

- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.26'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
    backendServiceArm: '$(subscription)'
    backendAzureRmResourceGroupName: '$(resourceGroup)'
    backendAzureRmStorageAccountName: '$(storageAccount)'
    backendAzureRmContainerName: '$(container)'
    backendAzureRmKey: '$(tfstateFile)'

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
    commandOptions: '-detailed-exitcode'
    environmentServiceNameAzureRM: '$(subscription)'

# - task: AzureCLI@2
#   inputs:
#     azureSubscription: '$(subscription)'
#     scriptType: 'pscore'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       # terraform plan -detailed-exitcode
#       Write-Host "LASTEXITCODE : $LASTEXITCODE"
#     workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'

- task: PowerShell@2
  inputs:
    workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
    targetType: 'inline'
    script: |
      # terraform show -json
      # terraform plan -detailed-exitcode
      Write-Host "LASTEXITCODE : $LASTEXITCODE"

- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/skip-step'
    environmentServiceNameAzureRM: $(subscription)